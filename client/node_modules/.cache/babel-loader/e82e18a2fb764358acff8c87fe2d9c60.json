{"ast":null,"code":"var _jsxFileName = \"/home/jaden/Desktop/Websites/typing-app/typing-app/src/components/Input.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = ({\n  text,\n  setText,\n  input,\n  setInput,\n  getNewText\n}) => {\n  _s();\n\n  const [time, setTime] = useState(0);\n  const [status, setStatus] = useState(0);\n  const interv = useRef(null);\n\n  const inputHandler = e => {\n    setInput(e.target.value);\n    if (status === 0) startTimer();\n\n    if (e.target.value.length >= text.length) {\n      stopTimer();\n      document.getElementById(\"input-box\").disabled = true;\n    }\n  };\n\n  var seconds = 0;\n\n  const startTimer = () => {\n    setStatus(1);\n    interv.current = setInterval(() => {\n      seconds++;\n      setTime(seconds);\n    }, 1000);\n  };\n\n  const stopTimer = () => {\n    setStatus(2);\n    clearInterval(interv.current);\n  };\n\n  const countCorrect = () => {\n    return input.split(\"\").filter((char, index) => char === text[index]).length;\n  };\n\n  const resetInput = () => {\n    setInput(\"\");\n    setText(getNewText(30));\n    document.getElementById(\"input-box\").value = \"\";\n    clearInterval(interv.current);\n    setStatus(0);\n    setTime(0);\n    seconds = 0;\n    document.getElementById(\"input-box\").disabled = false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: inputHandler,\n      type: \"text\",\n      autocomplete: \"off\",\n      placeholder: \"Start typing...\",\n      id: \"input-box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toolbar-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toolbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"time-text\",\n          children: [\"Time: \", Math.floor(time / 60), \":\", time % 60 < 10 ? \"0\" : \"\", time % 60]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"accuracy-text\",\n          children: [\"Accuracy:\", \" \", input.length === 0 ? 0 : Math.round(100 * countCorrect() / input.length), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"wpm-text\",\n          children: [\" \", \"WPM:\", \" \", time === 0 ? 0 : Math.round(countCorrect() * 10 / time)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetInput,\n          className: \"reset-btn\",\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Input, \"wa3nS7bCiyM8CuNbET/KlP8nRg4=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/home/jaden/Desktop/Websites/typing-app/typing-app/src/components/Input.jsx"],"names":["React","useState","useRef","Input","text","setText","input","setInput","getNewText","time","setTime","status","setStatus","interv","inputHandler","e","target","value","startTimer","length","stopTimer","document","getElementById","disabled","seconds","current","setInterval","clearInterval","countCorrect","split","filter","char","index","resetInput","Math","floor","round"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\n\r\nconst Input = ({ text, setText, input, setInput, getNewText }) => {\r\n    const [time, setTime] = useState(0);\r\n    const [status, setStatus] = useState(0);\r\n    const interv = useRef(null);\r\n\r\n    const inputHandler = (e) => {\r\n        setInput(e.target.value);\r\n\r\n        if (status === 0) startTimer();\r\n        if (e.target.value.length >= text.length) {\r\n            stopTimer();\r\n            document.getElementById(\"input-box\").disabled = true;\r\n        }\r\n    };\r\n\r\n    var seconds = 0;\r\n    const startTimer = () => {\r\n        setStatus(1);\r\n        interv.current = setInterval(() => {\r\n            seconds++;\r\n            setTime(seconds);\r\n        }, 1000);\r\n    };\r\n\r\n    const stopTimer = () => {\r\n        setStatus(2);\r\n        clearInterval(interv.current);\r\n    };\r\n\r\n    const countCorrect = () => {\r\n        return input.split(\"\").filter((char, index) => char === text[index])\r\n            .length;\r\n    };\r\n\r\n    const resetInput = () => {\r\n        setInput(\"\");\r\n        setText(getNewText(30));\r\n        document.getElementById(\"input-box\").value = \"\";\r\n        clearInterval(interv.current);\r\n        setStatus(0);\r\n        setTime(0);\r\n        seconds = 0;\r\n        document.getElementById(\"input-box\").disabled = false;\r\n    };\r\n\r\n    return (\r\n        <div className=\"input-container\">\r\n            <input\r\n                onChange={inputHandler}\r\n                type=\"text\"\r\n                autocomplete=\"off\"\r\n                placeholder=\"Start typing...\"\r\n                id=\"input-box\"\r\n            />\r\n            <div className=\"toolbar-container\">\r\n                <div className=\"toolbar\">\r\n                    <p className=\"time-text\">\r\n                        Time: {Math.floor(time / 60)}:\r\n                        {time % 60 < 10 ? \"0\" : \"\"}\r\n                        {time % 60}\r\n                    </p>\r\n                    <p className=\"accuracy-text\">\r\n                        Accuracy:{\" \"}\r\n                        {input.length === 0\r\n                            ? 0\r\n                            : Math.round((100 * countCorrect()) / input.length)}\r\n                        %\r\n                    </p>\r\n                    <p className=\"wpm-text\">\r\n                        {\" \"}\r\n                        WPM:{\" \"}\r\n                        {time === 0\r\n                            ? 0\r\n                            : Math.round((countCorrect() * 10) / time)}\r\n                    </p>\r\n                    <button onClick={resetInput} className=\"reset-btn\">\r\n                        Reset\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Input;\r\n"]},"metadata":{},"sourceType":"module"}