{"ast":null,"code":"var _jsxFileName = \"/home/jaden/Desktop/Websites/typing-app/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\"; //components\n\nimport TextBox from \"./components/TextBox\";\nimport Input from \"./components/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const wordlist = require(\"./wordlist.json\");\n\n  const getNewText = count => {\n    let str = \"\";\n\n    for (let i = 0; i < count; i++) {\n      str += wordlist[Math.floor(Math.random() * 1000) % 980];\n      if (i < count - 1) str += \" \";\n    }\n\n    return str;\n  };\n\n  const [text, setText] = useState(getNewText(30)); //use states\n\n  const [input, setInput] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Typing Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      text: text,\n      input: input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      text: text,\n      setText: setText,\n      input: input,\n      setInput: setInput,\n      getNewText: getNewText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"ebMaW4cohKaOGWH1u/nO/Im1OnA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/jaden/Desktop/Websites/typing-app/src/App.jsx"],"names":["React","useState","TextBox","Input","App","wordlist","require","getNewText","count","str","i","Math","floor","random","text","setText","input","setInput"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAMC,QAAQ,GAAGC,OAAO,CAAC,iBAAD,CAAxB;;AAEA,QAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,QAAIC,GAAG,GAAG,EAAV;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAApB,EAA2BE,CAAC,EAA5B,EAAgC;AAC5BD,MAAAA,GAAG,IAAIJ,QAAQ,CAACM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,IAAmC,GAApC,CAAf;AACA,UAAIH,CAAC,GAAGF,KAAK,GAAG,CAAhB,EAAmBC,GAAG,IAAI,GAAP;AACtB;;AACD,WAAOA,GAAP;AACH,GAPD;;AASA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAACM,UAAU,CAAC,EAAD,CAAX,CAAhC,CAZW,CAcX;;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,OAAD;AAAS,MAAA,IAAI,EAAEa,IAAf;AAAqB,MAAA,KAAK,EAAEE;AAA5B;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,KAAD;AACI,MAAA,IAAI,EAAEF,IADV;AAEI,MAAA,OAAO,EAAEC,OAFb;AAGI,MAAA,KAAK,EAAEC,KAHX;AAII,MAAA,QAAQ,EAAEC,QAJd;AAKI,MAAA,UAAU,EAAEV;AALhB;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAhCQH,G;;KAAAA,G;AAkCT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\n//components\nimport TextBox from \"./components/TextBox\";\nimport Input from \"./components/Input\";\n\nfunction App() {\n    const wordlist = require(\"./wordlist.json\");\n\n    const getNewText = (count) => {\n        let str = \"\";\n        for (let i = 0; i < count; i++) {\n            str += wordlist[Math.floor(Math.random() * 1000) % 980];\n            if (i < count - 1) str += \" \";\n        }\n        return str;\n    };\n\n    const [text, setText] = useState(getNewText(30));\n\n    //use states\n    const [input, setInput] = useState(\"\");\n\n    return (\n        <div className=\"App\">\n            <header>\n                <h1>Typing Test</h1>\n            </header>\n            <TextBox text={text} input={input} />\n            <Input\n                text={text}\n                setText={setText}\n                input={input}\n                setInput={setInput}\n                getNewText={getNewText}\n            />\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}